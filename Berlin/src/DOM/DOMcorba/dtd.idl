#ifndef __DTD__    
#define __DTD__

//hb////-*-Mode: C++-*-////////////////////////////////////////////////////////
//                                                                           //
// NAME        :                                                             //
// DESCRIPTION :                                                             //
// HISTORY     :                                                             //
//                                                                           //
//he///////////////////////////////////////////////////////////////////////////

typedef sequence<wstring> StringList;

interface DocumentType : Node {
  attribute wstring  name;

  attribute NodeList       externalSubset;
  attribute NodeList       internalSubset;
  
  attribute NamedNodeList  notations;
  attribute NamedNodeList  elementTypes;
};

enum OccurrenceType {
  OPT,     // ?
  PLUS,    // +
  REP      // *
};

interface ElementDefinition : Node {
  enum ContentType {
    EMPTY,
    ANY,
    PCDATA,
    MODEL_GROUP
  };

  attribute wstring        name;
  attribute ContentType    theContentType;//FIXME: Was: contentType
  attribute ModelGroup     contentModel;

  attribute NamedNodeList  attributeDefinitions;
  attribute StringList     inclusions;
  attribute StringList     exceptions;
};

interface ModelGroup : Node {
  enum ConnectionType {
    OR,   // |
    SEQ,  // ,
    AND
    };

  attribute ConnectionType  connector;
  attribute OccurrenceType  occurrence;
  attribute NodeList        tokens;
};

interface PCDATAToken : Node {
  // Token type for the string #PCDATA
};

interface ElementToken: Node {
  attribute wstring          name;
  attribute OccurrenceType   occurrence;
};

interface AttributeDefinition : Node {
  enum DeclaredValueType {
    CDATA,
    ID,
    IDREF,
    IDREFS,
    ENTITY,
    ENTITIES,
    NMTOKEN,
    NMTOKENS,
    NOTATION,
    NAME_TOKEN_GROUP
    };

  enum DefaultValueType {
    VALUE, // The default value was an attribute value 
    // specification without #FIXED. 
    FIXED,
    REQUIRED,
    IMPLIED
    };

  attribute wstring            name;
  attribute StringList         allowedTokens;
  attribute DeclaredValueType  declaredType;
  attribute DefaultValueType   defaultType;
  attribute NodeList           defaultValue;
};

interface Notation : Node {
  attribute wstring  name;
  
  attribute boolean  isPublic;

  attribute wstring  publicIdentifier;
  attribute wstring  systemIdentifier;
};
#endif