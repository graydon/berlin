//
// $id:$
//
// This source file is a part of the Berlin Project.
// Copyright (C) 1998 The Berlin Consortium 
// http://www.berlin-consortium.org
//
// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU Library General Public License
// as published by the Free Software Foundation; either version 2 of
// the License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful, but
// WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// General Public License for more details.
//
// You should have received a copy of the GNU Library General Public
// License along with this program; if not, write to the Free Software
// Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
//
// Author: ANOQ of the Sun
// EMail: anoq@berlin-consortium.org or anoq@vip.cybercity.dk

// Note: This is just a stripped down version of omniORB's
//       .hh file generated by omniidl2

#ifndef __Attribute_hh__
#define __Attribute_hh__

#include "support/dom/nocorba/CORBA.h"

#include "support/dom/nocorba/domDefs.hh"
#include "support/dom/nocorba/Node.hh"
#include "support/dom/nocorba/NoSuchAttributeException.hh"
#include "support/dom/nocorba/NotMyChildException.hh"
#include "support/dom/nocorba/NodeIterator.hh"
#ifndef __Attrib__
#define __Attrib__
class   Attrib;
typedef Attrib* Attrib_ptr;
typedef Attrib_ptr AttribRef;
#endif

class Attrib :  public virtual Node
{
public:

  virtual wstring * getName (  ) = 0;
  virtual wstring * getValue (  ) = 0;
  virtual CORBA::Boolean  specified ()  = 0;
  virtual void specified (CORBA::Boolean  _value) = 0;
  virtual wstring * toString (  ) = 0;
  //static Attrib_ptr _duplicate(Attrib_ptr);
  static Attrib_ptr _narrow(CORBA::Object_ptr)
    { return (Attrib_ptr)0; }
  //static Attrib_ptr _nil();

protected:

  Attrib()
  {}
  virtual ~Attrib() {}
};

class _sk_Attrib :  public virtual _sk_Node, public virtual Attrib
{};

#endif // __Attribute_hh__
