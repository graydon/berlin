//
// $id:$
//
// This source file is a part of the Berlin Project.
// Copyright (C) 1998 The Berlin Consortium 
// http://www.berlin-consortium.org
//
// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU Library General Public License
// as published by the Free Software Foundation; either version 2 of
// the License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful, but
// WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// General Public License for more details.
//
// You should have received a copy of the GNU Library General Public
// License along with this program; if not, write to the Free Software
// Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
//
// Author: ANOQ of the Sun
// EMail: anoq@berlin-consortium.org or anoq@vip.cybercity.dk

// Note: This is just a stripped down version of omniORB's
//       .hh file generated by omniidl2

#ifndef __Document_hh__
#define __Document_hh__

#include "support/dom/nocorba/CORBA.h"

#include "support/dom/nocorba/Node.hh"
#include "support/dom/nocorba/domDefs.hh"
#include "support/dom/nocorba/NoSuchAttributeException.hh"
#include "support/dom/nocorba/NotMyChildException.hh"
#include "support/dom/nocorba/NodeIterator.hh"
#include "support/dom/nocorba/Attribute.hh"
#include "support/dom/nocorba/AttributeList.hh"
#include "support/dom/nocorba/Element.hh"
#include "support/dom/nocorba/Text.hh"
#include "support/dom/nocorba/Comment.hh"
#include "support/dom/nocorba/ProcessingInstruction.hh"
#ifndef __Document__
#define __Document__
class   Document;
typedef Document* Document_ptr;
typedef Document_ptr DocumentRef;
#endif

class Document :  public virtual Node
{
public:
  virtual Node_ptr  documentType ()  = 0;
  virtual void documentType (Node_ptr  _value) = 0;
  virtual Element_ptr  documentElement ()  = 0;
  virtual void documentElement (Element_ptr  _value) = 0;
  virtual Element_ptr  createElement ( const wstring & tagName, AttributeList_ptr  attributes ) = 0;
  virtual Text_ptr  createTextNode ( const wstring & data ) = 0;
  virtual Comment_ptr  createComment ( const wstring & data ) = 0;
  virtual ProcessingInstruction_ptr  createProcessingInstruction ( const wstring & name, const wstring & data ) = 0;
  virtual Attrib_ptr  createAttribute ( const wstring & name, const wstring & value ) = 0;
  virtual AttributeList_ptr  createAttributeList (  ) = 0;
  virtual NodeIterator_ptr  getElementsByTagName ( const wstring & tagname ) = 0;
  //static Document_ptr _duplicate(Document_ptr);
  static Document_ptr _narrow(CORBA::Object_ptr ptr)
    { return (Document_ptr)((void *)ptr); }//Note: This is a _very_ quick and dirty hack
  //static Document_ptr _nil();

protected:

  Document()
  {}
  virtual ~Document() {}
};

class _sk_Document :  public virtual _sk_Node, public virtual Document
{};

#endif // __Document_hh__
