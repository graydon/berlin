/*$Id: Grid.idl,v 1.4 1999/09/13 21:22:07 gray Exp $
 *
 * This source file is a part of the Berlin Project.
 * Copyright (C) 1999 Stefan Seefeld <seefelds@magellan.umontreal.ca> 
 * http://www.berlin-consortium.org
 *
 * this code is based on code from Fresco.
 * Copyright (c) 1987-91 Stanford University
 * Copyright (c) 1991-94 Silicon Graphics, Inc.
 * Copyright (c) 1993-94 Fujitsu, Ltd.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with this library; if not, write to the
 * Free Software Foundation, Inc., 675 Mass Ave, Cambridge,
 * MA 02139, USA.
 */
#ifndef _Grid_idl
#define _Grid_idl

#include "Graphic.idl"

interface Traversal;

interface Grid : Graphic
{
  struct Index
  {
    long col;
    long row;
  };
  typedef sequence<Index> IndexSeq;
  struct Range
  {
    Index lower;
    Index upper;
  };
  void replace(in Graphic g, in Grid::Index i);
  Grid::Index find(in Traversal t);
  void allocateCell(in Region given, in Grid::Index i, in Region a);
  void requestRange(out Graphic::Requisition r, in Grid::Range a);
  void traverseRange(in Traversal t, in Grid::Range a);
  Grid::Index findRange(in Traversal t, in Grid::Range a);
  void rangePosition(in Region given, in Grid::Range a, out Vertex pos);
  Grid::Index upper();
};

#endif /* _Grid_idl */
