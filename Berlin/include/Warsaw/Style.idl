/*$Id: Style.idl,v 1.1 1999/04/13 12:11:54 gray Exp $
 *
 * This source file is a part of the Berlin Project.
 * Copyright (C) 1999 Stefan Seefeld <seefelds@magellan.umontreal.ca> 
 * http://www.berlin-consortium.org
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with this library; if not, write to the
 * Free Software Foundation, Inc., 675 Mass Ave, Cambridge,
 * MA 02139, USA.
 */

#ifndef _Style_idl
#define _Style_idl

module Style {

  // these are produced either by a programmer or by some style
  // engine, and have meaningful CORBA::Any values for each type, for
  // instance a fillColor will extract type Color, a lineThickness
  // will extract type Coord, etc.
  
  enum Aspect { 
    fillcolor, linecolor,  // >>= Struct Color
    linethickness, // >>= Coord
    ends, // >>= enum Endstyle
    fill,  // >>= enum Fillmode
    texture, // >>= interface Image -- tbc.
    linegradient, fillgradient // >>= Struct Gradient  -- tbc.
  };
  
  enum Fillmode {
    textureRepeat, textureClamp,
    solid, gradient, nofill };
  
  enum Endstyle { butt, cap, round };
  
  struct Setting {
    Aspect a;
    any val; 
  };
  
  typedef sequence<Setting> Spec;

};


#endif
